FROM python:3.12-slim

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
    nano \
    git \
    curl \
    wget \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install uv (pinned) by copying the static binary
COPY --from=ghcr.io/astral-sh/uv:0.8.13 /uv /uvx /bin/

# Tell uv "sync into the system interpreter" for project commands
ENV UV_PROJECT_ENVIRONMENT=/usr/local \
    UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy

# Set the working directory
WORKDIR /app

COPY pyproject.toml ./
COPY uv.lock ./  # wonâ€™t fail if you also adjust .dockerignore to allow it
RUN bash -lc 'if [ -f uv.lock ]; then uv sync --frozen --no-install-project; else uv sync --no-install-project; fi'

# Use build arguments for user details
ARG USER_NAME
ARG USER_ID
ARG GROUP_ID

# Create a non-root user with home directory that matches the host user
RUN groupadd -g $GROUP_ID $USER_NAME && \
    useradd -u $USER_ID -g $GROUP_ID -m -d /home/$USER_NAME -s /bin/bash $USER_NAME

# Set permissions for the working directory
RUN chown -R $USER_NAME:$USER_NAME /app

# Copy and set permissions for the startup script
COPY custom_startup.sh /usr/local/bin/custom_startup.sh
RUN chmod +x /usr/local/bin/custom_startup.sh

# Create and set permissions for Jupyter config directory
RUN mkdir -p /home/$USER_NAME/.jupyter && \
    chown -R $USER_NAME:$USER_NAME /home/$USER_NAME/.jupyter

# Expose ports for Jupyter and streamlit 
EXPOSE 8888 8501

# Switch to the non-root user
USER $USER_NAME